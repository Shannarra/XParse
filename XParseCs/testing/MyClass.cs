	
///<summary>
/// This is my new testing namespace
///</summary>
 namespace TestNamespace
{
	#region Dependencies
	using System;
	using System.Linq;
	using System.Collections;
	using Doc = System.Xml.XmlDocument;
	#endregion Dependencies

	///<summary>
	/// Just a test class summary
	///</summary>
	public class MyClass : Doc, IEnumerable
	{
	
		private volatile string myName  = "Shannarra";
	
		private uint myAge  = 69;
	
		///<summary>
		/// This is my static property
		///</summary>
		public static int MyProp { get; set; }
	
		///<summary>
		/// This is my accessor property
		///</summary>
		public uint MyAge { get => myAge; set => myAge = value; }
	
		///<summary>
		/// This is my accessor property
		///</summary>
		public string MyName { get => myName; set => myName = value; }
	
		///<summary>
		/// Creates a new MyClass object
		///</summarry>
		MyClass()
		{
			//initializing object of type MyClass here
		}
	
		///<summary>
		/// Creates a new MyClass object
		///</summarry>
		public MyClass(int value)
		{
			//initializing object of type MyClass here
			GreetMe();
		}
	
		///<summary>
		/// Prints 'HI' to the console.
		///</summary>
		public static int SayHi()
		{
			 const double pi = Math.PI;
		     double trippled = pi*pi*pi;
		     Console.WriteLine($"PI^3 = {trippled}");
		     return (int)trippled;
		}
	
		///<summary>
		/// Prints a greeting to the console.
		///</summary>
		public virtual void GreetMe()
		{
			 Console.WriteLine("hello there, I'm generated by the XParse program! PI^3 is: " + SayHi());
		}
	
		///<summary>
		/// Just a static void
		///</summary>
		public static void MyStatic()
		{
			//write some quality code here :)
		}

	}
}
